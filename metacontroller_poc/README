Providing an Operator to create, update and delete a notion of Tenant.
The operator uses concepts of metacontroller and argoworkflows.

Approach-1:
-----------
Different Custom Resources created for Create/Update/Delete Tenant operations.
Metacontroller passes the information to corresponding lambda controller which
creates an argo workflow based on templating.

CreateTenant: metacontroller_poc/tenant_create
UpdateTenant: metacontroller_poc/tenant_update
DeleteTenant: metacontroller_poc/tenant_delete

This is the first step in making operations easier to create a tenant with different
Custom resources.

Approach-2:
-----------

Define Single Custom Resource Tenant for all Create/Update/Delete operations.
Create and Update operations on Tenant object are handled via Argo workflow objects.
Delete operation on Tenant object is handled by adding OwnerReference to all the
resources created by Argo workflow. When Tenant object is deleted, Kubernetes Garbage
collector will delete all the resources with tenant object as owner reference.

metacontroller_poc/tenant

Appraoch-2 is better since the lifecycle management of Tenant resource is handled
by single CRD.
